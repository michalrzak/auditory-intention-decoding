@startuml

class Audio {
    +NDArray[float] array
    +int sampling_frequency
}

package auditory_tagging {
    abstract class AAudioTagger {
      #NDArray[float] {abstract} modify_chunk(audio_array_chunk: NDArray[float], fs: int))
      +Audio create(audio, stimuli)
    }
}

package model {
    abstract class AObserver {
        +void update(data: Any, identifier: EModelUpdateIdentifier)
    }

    class Model <<Observable>>{
        -List[str] primer_history

        -Model(stimuli: List[CreatedStimulus])
        -void notify(data: Any, identifier: EModelUpdateIdentifier)
        +void register(view: AObserver, priority: int)
        +void new_stimulus(stimulus: CreatedStimulus)
        +void new_primer(stimulus: CreatedStimulus)
        +void change_experiment_state(new_state: EExperimentState)
    }

    class Logger<<Observer>> {
        -Path exports_directory
        +Logger(target_folder: PathLike)
    }
    Logger -u-|> AObserver

    package constants {
        enum EExperimentState {
            INACTIVE
            INTRODUCTION
            RESTING_STATE_EYES_OPEN
            RESTING_STATE_EYES_CLOSED
            EXPERIMENT_INTRODUCTION
            EXPERIMENT
        }

        enum EModelUpdateIdentifier {
            NEW_STIMULUS
            NEW_PRIMER
            EXPERIMENT_STATE_CHANGED
        }
    }

    class Stimulus {
        +str prompt
        +str primer
        +List[str] options
        +List[Tuple[float, float]] time_stamps
        +int target
    }
    Stimulus "1" *-- "1" Audio: audio

    class CreatedStimulus {
        +Optional[str] used_tagger_label

        +CreatedStimulus(stimulus: Stimulus, modified_audio: Audio, used_tagger: AAudioTagger)
        +str prompt()
        +str primer()
        +List[str] options()
        +List[Tuple[float, float]] time_stamps()
        +int target()
    }
    CreatedStimulus "1" *-l- "1" Audio: modified_audio
    CreatedStimulus "*" *-u- "1" AAudioTagger: used_tagger
    CreatedStimulus "*" *-- "1" Stimulus
}

Model "1" *-r- "*" CreatedStimulus: "stimulus_history"
Model "*" o--- "1" EExperimentState: "experiment_state"
Model "1" o-l-- "*" AObserver
Model ..> EModelUpdateIdentifier: "uses"

AObserver .l.> constants: "uses"

Model "1" *-- "*" CreatedStimulus: created_stimuli

@enduml
